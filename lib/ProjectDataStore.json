{
    "1": {
        "name": "My Garden App",
        "size": "3",
        "website": "https://www.github.com",
        "technologies": "D3",
        "images": [
            [
                "/project2/garden-app1.PNG",
                ""
            ],
            [
                "/project2/garden-app2.PNG",
                ""
            ],
            [
                "/project2/garden-app3.PNG",
                ""
            ],
            [
                "/project2/garden-app5.PNG",
                ""
            ],
            [
                "/project2/garden-app6.PNG",
                ""
            ],
            [
                "/project2/garden-app7.PNG",
                ""
            ],
            [
                "/project2/garden-app8.PNG",
                ""
            ]
        ],
        "content": [
            "My Sinatra Project is an application for homeowners and apartment renters who want to keep track of their many household plants. The MVP is defined with the help of the following user stories:",
            "Users can add a plant to their “My Greenhouse” section",
            "Users can view a stream of all of the plants in the app database, which has user information and plant care information",
            "Users can edit information of their own plants",
            "Users can delete plants from their own plants I chose this subject of gardening because the structure of the UX provided a simple framework. It suits the User has many of relationship, which allowed me to really work with the logic without getting unnecessarily frustrated with erroneous and superfluous functionality. After developing the necessary framework, the idea grew on me and I had an easy time visualizing long term how the app would take shape. I could see comments and social interaction of all users and their nuanced experiences when it comes to caring for house plants. In programming this app, I researched common house plants and extracted common care factors. These care factors became the fields for the Plant database. The second table of data in my database is the User table, which stores personal collections of plants by hooking into the following relationship:",
            "A USER HAS MANY PLANTS.",
            "Initially, I programmed the app so the user would have to take time to put in the Plant specs, which poses a problem. The problem is that it is tedious to enter the information pertaining to a specific plant, specifically, the scientific naming of most of the plant species. As a result, the last programming and functionality that was added to the app was loading drop down lists and option buttons as opposed to text area boxes for putting in plant specs.",
            "The key functions of this app are fairly rudimentary, which allowed me to learn the core of Sinatra frameworks. As a result of this project, I feel more familiar with the REST conventions and routing methods that take place when clients are executing HTTP requests. Working with the visual aspect of HTML and the backend DB was a thrill. I feel like so many questions I have had over the years regarding the internet have been answered!"
        ]
    },
    "2": {
        "name": "Creative Coding",
        "size": "3",
        "website": "No Website",
        "technologies": "Java, P5JS",
        "images": [
            [
                "/movies/processing-movie3.mp4",
                "A processing canvas which gives the visual effect of tapping a white wall on every occasion the square hits it."
            ],
            [
                "/movies/processing-movie.mp4",
                "This is a grid that uses a nested for loop which bases the fill of the grid on a variable called cell size."
            ],
            [
                "/GIFS/YellowGrid.gif",
                "The square broken down into a grid which are then divided artfully into another grid."
            ],
            [
                "/movies/processing-movie2.mp4",
                "An alternate rendering of the processing above, using a different set of variables used in the creation of the grid. The color hues are based on the screen location!"
            ]
        ],
        "content": [
            "Turpis egestas maecenas pharetra convallis posuere morbi. Eget aliquet nibh praesent tristique. Purus semper eget duis at tellus at urna condimentum. Vivamus arcu felis bibendum ut tristique et. Pretium nibh ipsum consequat nisl vel pretium lectus. Lobortis feugiat vivamus at augue eget. In nulla posuere sollicitudin aliquam ultrices sagittis orci a. Rhoncus mattis rhoncus urna neque viverra justo nec ultrices dui. Scelerisque fermentum dui faucibus in ornare. Aliquam vestibulum morbi blandit cursus. Bibendum arcu vitae elementum curabitur. Commodo viverra maecenas accumsan lacus vel facilisis volutpat est velit. Ullamcorper velit sed ullamcorper morbi tincidunt ornare massa eget egestas. Aucr augue mauris augue neque. Fringilla urna porttitor rhoncus dolor purus non enim praesent."
        ]
    },
    "3": {
        "name": "Basketball Matchup CLI",
        "size": "1",
        "website": "https://github.com/atBeatty/basketball_match_cli",
        "technologies": "Ruby, Nokogiri, URI",
        "images": [
            [
                "/movies/basketball-cli.mov",
                "This is a video screen recording of my CLI program running one iteration. I am currently working on a "
            ]
        ],
        "content": [
            "This was my first project completed as a bright-eyed bushy-tailed student at the Flatiron Academy. I love this project, as it represents a beacon of my beginnings to a real beginning. Looking back at it now, I remember how difficult and foreign the world of coding and its many languages was to me the first week into the full time program. The CLI program is designed to play a 5 v 5 basketball game in which the player who is running the app can make substituions after each period. Prior to starting the game, the user is able to decide which squad to pick. I think this project is meaningful to me because it showcases the elegance and power of programming. I explored web-scraping for the first time. For a reasonable 176 kb of space on my computer, a few lines of codes allows me to fetch over twenty years of NBA statistics, down to the game by game performance.",
            "I think what I enjoyed the most about this  project was learning how to use Nokogiri as a tool to scrape websites and break them down into objects. I felt so powerful because I now have the ability to scale into projects that require granular information."
        ]
    },
    "4": {
        "name": "CallMe",
        "size": "3",
        "website": "https://www.callmellc.com",
        "technologies": "UX/UI",
        "images": [
            [
                "available.PNG",
                "This simple UX allows users to signal availability with a swipe of a finger."
            ],
            [
                "callme1.PNG",
                "This is a timer used for setting up quick availability."
            ],
            [
                "callme3.PNG",
                "This is a timer used for setting up quick availability."
            ],
            [
                "callme4.PNG",
                "This is a timer used for setting up quick availability."
            ],
            [
                "callme5.PNG",
                "This is a timer used for setting up quick availability."
            ],
            [
                "callme6.PNG",
                "This is a timer used for setting up quick availability."
            ],
            [
                "unavailable.PNG",
                "Slide to unavailable to show your friends and family that your availability is not turned on. The user can "
            ]
        ],
        "content": [
            "The founder recognized the need for this app one afternoon in the checkout line at the grocery store. Adam Beatty had moved two years prior from Chicago, IL to his current home base of Portland, OR. As soon as he moved he began to feel the effects of losing contact with his closest friends and family members.  He missed those personal connections that go beyond the virtual networking experiences offered by Facebook, Instagram, texting, emails, and etc.  This is the way to bring back convenience to communicating on the phone.",
            "I am passionate about this idea because I value communication, family, and conversation. The modern era has us consumed by our mobile devices. I totally understand the benefits of having the ability to do nearly anything from our devices, but it has put to rest any natural inclination to have a phone call.",
            "My approach to this project was to maintain focus on what humans think when their phone rings or vibrates. The UX flow focuses on the barriers that prevent us all from using the phone for its original intended purpose; to have a conversation."
        ]
    },
    "5": {
        "name": "LML Production App",
        "size": "5",
        "website": "https://www.github.com/atBeatty/lml-production-fe",
        "technologies": "Rails API Backend, JavaScript Frontend",
        "images": [
            [
                "/movies/lml-productions.mov",
                "A simple and elegant CRUD app made with Ruby on Rails, HTML, CSS, and React."
            ],
            [
                "/movies/lml-production-show.mov",
                "A simple and elegant CRUD app made with Ruby on Rails, HTML, CSS, and React."
            ],
            [
                "/movies/lml-add-crew.mov",
                "Add a name and client to your production to keep track of each and every shoot."
            ]
        ],
        "content": [
            "My wife is a producer, and for all of her production contracts there are quite a few moving pieces. To keep track of all productions I built a basic CRUD application that allows users to store information about various productions. It acts a record keeping application as well as an organized single source of truth. It helps with future customer service, streamlined communications, and reducing errors. This app is set up for an agency which keeps track of productions. Each production instance joins the foreign_keys and from there, relevant information can be displayed. From an agency/user perspective, this app allows for quick access to personnel, schedules, contracts, contact info, etc. I would like to see this built out to include more relationships and ties to the production class. I could see it being an app that sets reminders and and creates a daily schedule per production, considering the nuances and uniqueness of each shoot. It would be helpful to hook into a Crew class that helps access data on the Production crew. I imagine this will be a list of contractors/freelancers that are able to have many productions as one data association.",
            "Currently, the app allows a user to create productions and create associated crews. The crew is built with a relationship to the crew_members table in order to to keep a nice separation of concerns, as well as useful information.",
            "The future of this app will have functionality to populate invoices. These invoices will be tied to each crew, client, production, etc."
        ]
    },
    "6": {
        "name": "Golf Stats",
        "size": "1 - Small, but a start to something incredible.",
        "website": "https://github.com/atBeatty/d3-stats",
        "technologies": "D3",
        "images": [],
        "content": [
            "This project became a playground for me to experiment with my some of my favorite things. I absolutely love data and working with it. D3 is a library I have been wanting to master since I started developing.",
            "As I learned more and more about using APIs and other accessible data banks, whether it be a subscription or csv data, it  became clear as where I want to spend my time. I am looking forward to digesting D3 in coming weeks to really hone in on its potential."
        ]
    }
}